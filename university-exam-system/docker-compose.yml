version: "3.8"

services:
  mongodb:
    image: mongo:latest
    container_name: mongo_db
    volumes:
      - mongo-data:/data/db # MongoDB data volume
      - ./data/initdb.d:/docker-entrypoint-initdb.d
    ports:
      - "27017:27017"
    networks:
      - backend
    restart: always
  sqldb:
    image: mysql:8.0
    container_name: db
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: requests_db
      MYSQL_USER: request_user
      MYSQL_PASSWORD: requestpass
    ports:
      - "3307:3306"
    networks:
      - backend
  # Admin Service
  user-service:
    build: ./services/user-service
    ports:
      - "8000:8000"
    depends_on:
      - mongodb
    networks:
      - backend

  # Student Service
  classes-service:
    build: ./services/classes-service
    ports:
      - "8001:8001"
    depends_on:
      - mongodb
    networks:
      - backend

  # Teacher Service
  exam-service:
    build: ./services/exam-service
    ports:
      - "8002:8002"
    depends_on:
      - mongodb
    networks:
      - backend

  # Evaluation Service
  questions-service:
    build: ./services/questions-service
    ports:
      - "8003:8003"
    depends_on:
      - mongodb
    networks:
      - backend
    # Evaluation Service
  response-service:
    build: ./services/response-service
    ports:
      - "8004:8004"
    depends_on:
      - mongodb
    networks:
      - backend

  stories-service:
    build: ./services/stories-service
    ports:
      - "5000:5000"
    depends_on:
      - mongodb
    networks:
      - backend

  requests-service:
    build: ./services/requests-service
    ports:
      - "5001:5001"
    depends_on:
      - sqldb
    networks:
      - backend

  # Reverse Proxy: Nginx
  nginx:
    image: nginx:latest
    container_name: nginx
    ports:
      - "80:80"
    volumes:
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf # Mount the Nginx configuration file
    depends_on:
      - user-service
      - classes-service
      - exam-service
      - questions-service
      - response-service
      - stories-service
      - requests-service
    networks:
      - backend

networks:
  backend:
    driver: bridge

# Define the volume that MongoDB will use
volumes:
  mongo-data:
    driver: local
